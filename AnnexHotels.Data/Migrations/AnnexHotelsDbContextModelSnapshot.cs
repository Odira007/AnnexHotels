// <auto-generated />
using System;
using AnnexHotels.Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AnnexHotels.Data.Migrations
{
    [DbContext(typeof(AnnexHotelsDbContext))]
    partial class AnnexHotelsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AnnexHotels.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("HotelId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckInDate = new DateTime(2023, 10, 13, 15, 5, 24, 531, DateTimeKind.Local).AddTicks(5024),
                            CheckOutDate = new DateTime(2023, 10, 18, 15, 5, 24, 531, DateTimeKind.Local).AddTicks(5949),
                            CustomerId = 3
                        },
                        new
                        {
                            Id = 2,
                            CheckInDate = new DateTime(2023, 10, 13, 15, 5, 24, 531, DateTimeKind.Local).AddTicks(6634),
                            CheckOutDate = new DateTime(2023, 10, 20, 15, 5, 24, 531, DateTimeKind.Local).AddTicks(6647),
                            CustomerId = 1
                        },
                        new
                        {
                            Id = 3,
                            CheckInDate = new DateTime(2023, 10, 13, 15, 5, 24, 531, DateTimeKind.Local).AddTicks(6659),
                            CheckOutDate = new DateTime(2023, 10, 27, 15, 5, 24, 531, DateTimeKind.Local).AddTicks(6661),
                            CustomerId = 2
                        },
                        new
                        {
                            Id = 4,
                            CheckInDate = new DateTime(2023, 10, 13, 15, 5, 24, 531, DateTimeKind.Local).AddTicks(6663),
                            CheckOutDate = new DateTime(2023, 10, 19, 15, 5, 24, 531, DateTimeKind.Local).AddTicks(6665),
                            CustomerId = 4
                        },
                        new
                        {
                            Id = 5,
                            CheckInDate = new DateTime(2023, 10, 13, 15, 5, 24, 531, DateTimeKind.Local).AddTicks(6666),
                            CheckOutDate = new DateTime(2023, 10, 22, 15, 5, 24, 531, DateTimeKind.Local).AddTicks(6669),
                            CustomerId = 3
                        });
                });

            modelBuilder.Entity("AnnexHotels.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegNum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 10, 13, 15, 5, 24, 527, DateTimeKind.Local).AddTicks(9895),
                            Description = "Crafting serenity and luxury in nature's embrace",
                            Email = "aplinerc@gmailcom",
                            Name = "Alpine Retreats Corporation",
                            RegNum = "537J4"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 10, 13, 15, 5, 24, 530, DateTimeKind.Local).AddTicks(3582),
                            Description = "Redefining urban hospitality with a blend of style and relaxation",
                            Email = "metrocomfortco@gmailcom",
                            Name = "Metropolitan Comfort Co.",
                            RegNum = "3B249"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 10, 13, 15, 5, 24, 530, DateTimeKind.Local).AddTicks(3627),
                            Description = "Your gateway to coastal elegance and relaxation",
                            Email = "gazagroup@gmailcom",
                            Name = "Gaza group",
                            RegNum = "227A6"
                        });
                });

            modelBuilder.Entity("AnnexHotels.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConfirmPassword = "sarah#$34",
                            CreatedAt = new DateTime(2023, 10, 13, 15, 5, 24, 530, DateTimeKind.Local).AddTicks(9964),
                            Email = "sarahandersen@gmail.com",
                            FirstName = "Sarah",
                            LastName = "Andersen",
                            Password = "sarah#$34",
                            PhoneNumber = "08139050760"
                        },
                        new
                        {
                            Id = 2,
                            ConfirmPassword = "john#$34",
                            CreatedAt = new DateTime(2023, 10, 13, 15, 5, 24, 531, DateTimeKind.Local).AddTicks(3562),
                            Email = "johnfreeman@gmail.com",
                            FirstName = "John",
                            LastName = "Freeman",
                            Password = "john#$34",
                            PhoneNumber = "09033672290"
                        },
                        new
                        {
                            Id = 3,
                            ConfirmPassword = "chibueze#$34",
                            CreatedAt = new DateTime(2023, 10, 13, 15, 5, 24, 531, DateTimeKind.Local).AddTicks(3580),
                            Email = "chibuezeokpara@gmail.com",
                            FirstName = "Chibueze",
                            LastName = "Okpara",
                            Password = "chibueze#$34",
                            PhoneNumber = "08140056772"
                        },
                        new
                        {
                            Id = 4,
                            ConfirmPassword = "lisa#$34",
                            CreatedAt = new DateTime(2023, 10, 13, 15, 5, 24, 531, DateTimeKind.Local).AddTicks(3583),
                            Email = "lisahendrix@gmail.com",
                            FirstName = "Lisa",
                            LastName = "Hendrix",
                            Password = "lisa#$34",
                            PhoneNumber = "08087985609"
                        });
                });

            modelBuilder.Entity("AnnexHotels.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "New York",
                            CompanyId = 3,
                            Country = "USA",
                            Description = "Nestled in the heart of lush forests, this hotel offers tranquility and luxury.",
                            Name = "Mavens Hotel",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            City = "Eti Osa",
                            CompanyId = 1,
                            Country = "Nigeria",
                            Description = "A stylish hotel in the midst of the city, blending modernity with comfort",
                            Name = "Oriental Hotel",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            City = "Manchester",
                            CompanyId = 2,
                            Country = "England",
                            Description = "A beautifully restored hotel showcasing timeless charm and rich heritage",
                            Name = "Kruizia Hotel",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            City = "Jos",
                            CompanyId = 1,
                            Country = "Nigeria",
                            Description = "Step from your room to the sandy shore at this seaside paradise",
                            Name = "Ebano Hotel",
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            City = "Birmingham",
                            CompanyId = 2,
                            Country = "England",
                            Description = "A cozy lodge perched amidst majestic peaks, perfect for outdoor enthusiasts",
                            Name = "Eko Hotel",
                            Status = 0
                        });
                });

            modelBuilder.Entity("AnnexHotels.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBooked")
                        .HasColumnType("bit");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("money");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<string>("RoomType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HotelId = 2,
                            IsBooked = true,
                            PricePerDay = 40000m,
                            RoomNumber = 23,
                            RoomType = "Suite"
                        },
                        new
                        {
                            Id = 2,
                            HotelId = 4,
                            IsBooked = true,
                            PricePerDay = 45000m,
                            RoomNumber = 403,
                            RoomType = "Penthouse"
                        },
                        new
                        {
                            Id = 3,
                            HotelId = 2,
                            IsBooked = false,
                            PricePerDay = 60000m,
                            RoomNumber = 37,
                            RoomType = "Suite"
                        },
                        new
                        {
                            Id = 4,
                            HotelId = 1,
                            IsBooked = true,
                            PricePerDay = 35000m,
                            RoomNumber = 54,
                            RoomType = "Loft"
                        },
                        new
                        {
                            Id = 5,
                            HotelId = 5,
                            IsBooked = false,
                            PricePerDay = 40000m,
                            RoomNumber = 13,
                            RoomType = "Suite"
                        },
                        new
                        {
                            Id = 6,
                            HotelId = 3,
                            IsBooked = false,
                            PricePerDay = 45000m,
                            RoomNumber = 64,
                            RoomType = "Loft"
                        },
                        new
                        {
                            Id = 7,
                            HotelId = 5,
                            IsBooked = false,
                            PricePerDay = 52000m,
                            RoomNumber = 47,
                            RoomType = "Cabana"
                        },
                        new
                        {
                            Id = 8,
                            HotelId = 2,
                            IsBooked = true,
                            PricePerDay = 40000m,
                            RoomNumber = 90,
                            RoomType = "Villa"
                        },
                        new
                        {
                            Id = 9,
                            HotelId = 4,
                            IsBooked = false,
                            PricePerDay = 36000m,
                            RoomNumber = 14,
                            RoomType = "Suite"
                        },
                        new
                        {
                            Id = 10,
                            HotelId = 1,
                            IsBooked = false,
                            PricePerDay = 35000m,
                            RoomNumber = 76,
                            RoomType = "Cabana"
                        });
                });

            modelBuilder.Entity("AnnexHotels.Models.Booking", b =>
                {
                    b.HasOne("AnnexHotels.Models.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnnexHotels.Models.Hotel", null)
                        .WithMany("Bookings")
                        .HasForeignKey("HotelId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("AnnexHotels.Models.Hotel", b =>
                {
                    b.HasOne("AnnexHotels.Models.Company", "Company")
                        .WithMany("Hotels")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("AnnexHotels.Models.Room", b =>
                {
                    b.HasOne("AnnexHotels.Models.Booking", null)
                        .WithMany("ReservedRooms")
                        .HasForeignKey("BookingId");

                    b.HasOne("AnnexHotels.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("AnnexHotels.Models.Booking", b =>
                {
                    b.Navigation("ReservedRooms");
                });

            modelBuilder.Entity("AnnexHotels.Models.Company", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("AnnexHotels.Models.Customer", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("AnnexHotels.Models.Hotel", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
